<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="customer-search" enabled="true">
      <stringProp name="TestPlan.comments">
      </stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">
      </stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="parameters" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="application_endpoint" elementType="Argument">
            <stringProp name="Argument.name">application_endpoint</stringProp>
            <stringProp name="Argument.value">azdeapi-dev.mgmresorts.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="application_token" elementType="Argument">
            <stringProp name="Argument.name">application_token</stringProp>
            <stringProp name="Argument.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IllNRUxIVDBndmIwbXhvU0RvWWZvbWpxZmpZVSIsImtpZCI6IllNRUxIVDBndmIwbXhvU0RvWWZvbWpxZmpZVSJ9.eyJhdWQiOiIwMDAwMDAwMi0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9kZGI4NTkyZi1lZDc0LTQzMjktYmZkMi01NzFiN2MzNDY5OWUvIiwiaWF0IjoxNTg2MjE2OTc4LCJuYmYiOjE1ODYyMTY5NzgsImV4cCI6MTU4NjIyMDg3OCwiYWlvIjoiNDJkZ1lIaTVjOCtuSEptNVo0NjZ4WVhxV1hMNkFRQT0iLCJhcHBpZCI6IjhhYmQ0MWQ2LWU2MTgtNGU3Mi04ZTkyLWM1NWY3Nzc0NTAxYyIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0L2RkYjg1OTJmLWVkNzQtNDMyOS1iZmQyLTU3MWI3YzM0Njk5ZS8iLCJvaWQiOiI1MDc2NWM5OC03N2ZkLTRiMDItOWEzZC04ZmRjZTZmN2FmMDYiLCJzdWIiOiI1MDc2NWM5OC03N2ZkLTRiMDItOWEzZC04ZmRjZTZmN2FmMDYiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiTkEiLCJ0aWQiOiJkZGI4NTkyZi1lZDc0LTQzMjktYmZkMi01NzFiN2MzNDY5OWUiLCJ1dGkiOiJfYm54ZlJ0cDRFZWlTUEZsSEJ3Q0FBIiwidmVyIjoiMS4wIn0.IbGxLIbMlaze2GOt9BcZD-8MhgnDBeFc7i_Zc7boja1ucb63vGIj_uOHI12_UkMWC5pP9sUNFA7u3q8AuVnj7JLxPZwmMBXjmzaGjT7WAeDvCozMtgMBOH9_n2gbOLacwTzLLTsibAdBv_Q9_ydfAJ463yZRfHrr3z84mK-gGMR4dwE1oToCTuF9mq6sj4RTm5czdveIka8UnDw1JigtqSDAvmTeN_MFv9G0pnY2OZgwUidtRGGZOVAOfCCTnjBh5fjKe5_6i_txUoycZqryKe5IQYo9QptD4g8ZYryu809QCmEP-2Am9OqizRqjMbqYaEma2CxxtFt95-sjJ0g3lA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="apim_prefix" elementType="Argument">
            <stringProp name="Argument.name">apim_prefix</stringProp>
            <stringProp name="Argument.value">loyalty-info/d/v2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loop_count" elementType="Argument">
            <stringProp name="Argument.name">loop_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup_time" elementType="Argument">
            <stringProp name="Argument.name">rampup_time</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="number_of_threads" elementType="Argument">
            <stringProp name="Argument.name">number_of_threads</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pc_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_pc_mlife</stringProp>
            <stringProp name="Argument.value">4387797</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_sc_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_sc_mlife</stringProp>
            <stringProp name="Argument.value">77432765</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pl_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_pl_mlife</stringProp>
            <stringProp name="Argument.value">32093716</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pb_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_pb_mlife</stringProp>
            <stringProp name="Argument.value">4387797</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pp_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_pp_mlife</stringProp>
            <stringProp name="Argument.value">72619330</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pt_mlife" elementType="Argument">
            <stringProp name="Argument.name">search_pt_mlife</stringProp>
            <stringProp name="Argument.value">75710067</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="search_pt_year" elementType="Argument">
            <stringProp name="Argument.name">search_pt_year</stringProp>
            <stringProp name="Argument.value">2019</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="threads" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop_count}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${number_of_threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup_time}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">         </stringProp>
        <stringProp name="ThreadGroup.delay">         </stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${application_token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-mgm-correlation-id</stringProp>
              <stringProp name="Header.value">${__RandomString(25,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-stop_codes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/stop-codes/${search_sc_mlife}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-comments" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/comments/${search_pc_mlife}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-linked_player" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/linked-player/${search_pl_mlife}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-balance" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/balance/${search_pb_mlife}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-promo" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/player-promo/${search_pp_mlife}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="player-tax_information" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${application_endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">           </stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">           </stringProp>
          <stringProp name="HTTPSampler.path">/${apim_prefix}/patron/tax-information/${search_pt_mlife}/${search_pt_year}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re">           </stringProp>
          <stringProp name="HTTPSampler.connect_timeout">           </stringProp>
          <stringProp name="HTTPSampler.response_timeout">           </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">error_logs.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="summary" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">         </stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
